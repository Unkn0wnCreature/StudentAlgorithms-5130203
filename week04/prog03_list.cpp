/*
Программа №3 из Списка 02

Задача: вычисление ряда Маклорена для функций

Определение переменных:
n - определяет количество слагаемых в ряду
opt - определяет опцию из списка
x - определяет аргумент функции
cont - индикатор продолжения программы
result - сумма ряда Маклорена для функции
x1 - переменная-клон переменной x
last_term - n-е слагаемое ряда Маклорена для функции
*/

#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    int n, opt;
    double x;
    char cont;

    do
    {
        double result, x1 = x, last_term;
        cout<< "[1] ОПЦИЯ 1: ввод значений" << endl;
        cout<< "[2] ОПЦИЯ 2: вычисление Ряда Маклорена для показательной функции" << endl;
        cout<< "[3] ОПЦИЯ 3: вычисление Ряда Маклорена для функции натурального логарифма" << endl;
        cout<< "[4] ОПЦИЯ 4: вычисление Ряда Маклорена для синусоидальной функции" << endl;
        cout<< "[5] ОПЦИЯ 5: вычисление Ряда Маклорена для функции косинуса" << endl;
        cout<< "[6] ОПЦИЯ 6: вычисление Ряда Маклорена для рациональной функции" << endl;
        cout<< "----------------------------------------------------------------------" << endl;

        cout<< "\nВыберите опцию: ";
        cin>>opt;

        switch (opt)
        {
            case 1: // ОПЦИЯ 1: ввод значений
            {
                cout<< "\nВведите x: ";
                cin>>x;

                do
                {
                    cout<< "\nВведите n из [2, 20]: ";
                    cin>>n;
                }
                while (n < 2 || n > 20);

                break;
            };

            case 2: // ОПЦИЯ 2: вычисление Ряда Маклорена для показательной функции
            {
                last_term = 1; // первое слагаемое
                result = last_term;

                for (int i = 1; i <= n; i++)
                {
                    last_term *= x / i; // получение следующего слагаемого
                    cout<< last_term << " "; // вывод слагаемого
                    result += last_term; // увеличение значения суммы ряда
                };

                cout<< "\ne^(x) = " << result; // вывод результата

                break;
            };

            case 3: // ОПЦИЯ 3: вычисление Ряда Маклорена для функции натурального логарифма
            {
                last_term = x; // первое слагаемое
                result = last_term;

                for (int i = 2; i <= n; i++)
                {
                    last_term *= (-1) * x / i; // получение следующего слагаемого
                    cout<< last_term << " "; // вывод слагаемого
                    result += last_term; // увеличение значения суммы ряда
                };

                cout<< "\nln(1+x) = " << result; // вывод результата

                break;
            };

            case 4: // ОПЦИЯ 4: вычисление Ряда Маклорена для синусоидальной функции
            {
                last_term = x; // первое слагаемое
                result = last_term;

                for (int i = 1; i <= n; i++)
                {
                    last_term *= (-1) * (x*x) / ((2*i) * (2*i + 1)); // получение следующего слагаемого
                    cout<< last_term << " "; // вывод слагаемого
                    result += last_term; // увеличение значения суммы ряда
                };

                cout<< "\nsin(x) = " << result; // вывод результата

                break;
            };

            case 5: // ОПЦИЯ 5: вычисление Ряда Маклорена для функции косинуса
            {
                last_term = 1; // первое слагаемое
                result = last_term;

                for (int i = 1; i <= n; i++)
                {
                    last_term *= (-1) * (x*x) / ((2*i - 1) * (2*i)); // получение следующего слагаемого
                    cout<< last_term << " "; // вывод слагаемого
                    result += last_term; // увеличение значения суммы ряда
                };

                cout<< "\ncos(x) = " << result; // вывод результата

                break;
            };

            case 6: // ОПЦИЯ 6: вычисление Ряда Маклорена для рациональной функции
            {
                // проверка ОДЗ
                while (abs(x1) >= 1)
                {
                    cout<< "\nВведите число x, чтобы |x| < 1: ";
                    cin>>x1;
                };

                last_term = 1; // первое слагаемое
                result = last_term;

                for (int i = 2; i <= n; i++)
                {
                    last_term *= x; // получение следующего слагаемого без коэффициента
                    cout<< i * last_term << " "; // вывод слагаемого с коэффициентом
                    result += i * last_term; // увеличение значения суммы ряда
                };

                cout<< "\n1 / (1 - x)^2 = " << result; // вывод результата

                break;
            };
        }

        cout<< "\nХотите продолжить? [Y/N]"; // продолжение работы программы
        cin>>cont;
    } while (cont == 'y' || cont == 'Y');
    
    cout<< "\nПрограмма окончена!" << endl;

    return 0;
};